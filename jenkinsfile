def pipelineName = env.JOB_BASE_NAME

pipeline {
    agent any

    parameters {
        string(name: 'gittag', defaultValue: '1.0.0', description: 'enter branch tag to build')
    }
    
    stages {
        stage ("first stage git checkout") {
            steps {
                echo "Welcome to jenkins delerative pipline by batool checking out git"
                sh "pwd"
                echo "$pipelineName"
                echo "${params.gittag}"
                checkout ([
                $class: 'GitSCM',
                    branches: [[name: "refs/tags/${params.gittag}"]],
                    extensions: [[$class: 'CloneOption', shallow: false, depth: 0, reference: '']],
                    userRemoteConfigs: scm.userRemoteConfigs,
                ])

            }


        }

        stage ("second stage build artifacts zip file for docker") {
            steps{
                echo "i am in second stage"
                sh "pwd"
                sh "rm -rf artifact*"
                sh "zip -r artifact.zip ."

            }

                
        }

        stage ("Copy artifacts.zip to docker and build/run docker container"){
            steps{
                echo "i am in copying atrifacts to docker"
                sh "whoami"
                sh "ansible-playbook playbooks/remove_old_artifact_file_from_docker.yml"
                sh "scp -i /var/lib/jenkins/Easy-Audit-Keypair.pem artifact.zip jenkins@10.0.0.186:/tmp/artifact.zip"
                sh "ansible-playbook playbooks/configure_django_project_on_docker.yml"
            }

        }


    }




}